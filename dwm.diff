diff --git a/config.def.h b/config.def.h
index 1c0b587..cd29705 100644
--- a/config.def.h
+++ b/config.def.h
@@ -1,12 +1,12 @@
 /* See LICENSE file for copyright and license details. */
 
 /* appearance */
-static const unsigned int borderpx  = 1;        /* border pixel of windows */
+static const unsigned int borderpx  = 0;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
 static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
-static const char *fonts[]          = { "monospace:size=10" };
-static const char dmenufont[]       = "monospace:size=10";
+static const char *fonts[]          = { "monospace:size=12" };
+static const char dmenufont[]       = "monospace:size=12";
 static const char col_gray1[]       = "#222222";
 static const char col_gray2[]       = "#444444";
 static const char col_gray3[]       = "#bbbbbb";
@@ -19,22 +19,16 @@ static const char *colors[][3]      = {
 };
 
 /* tagging */
-static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
+static const char *tags[] = { "1", "2", "3", "4", "5" };
 
 static const Rule rules[] = {
-	/* xprop(1):
-	 *	WM_CLASS(STRING) = instance, class
-	 *	WM_NAME(STRING) = title
-	 */
-	/* class      instance    title       tags mask     isfloating   monitor */
-	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
-	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
+           { NULL,       NULL,       NULL,       0,            False,       -1 },
 };
 
 /* layout(s) */
 static const float mfact     = 0.55; /* factor of master area size [0.05..0.95] */
 static const int nmaster     = 1;    /* number of clients in master area */
-static const int resizehints = 1;    /* 1 means respect size hints in tiled resizals */
+static const int resizehints = 0;    /* 1 means respect size hints in tiled resizals */
 
 static const Layout layouts[] = {
 	/* symbol     arrange function */
@@ -44,7 +38,7 @@ static const Layout layouts[] = {
 };
 
 /* key definitions */
-#define MODKEY Mod1Mask
+#define MODKEY Mod4Mask
 #define TAGKEYS(KEY,TAG) \
 	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
 	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
@@ -54,46 +48,71 @@ static const Layout layouts[] = {
 /* helper for spawning shell commands in the pre dwm-5.0 fashion */
 #define SHCMD(cmd) { .v = (const char*[]){ "/bin/sh", "-c", cmd, NULL } }
 
+/** Function to shift the current view to the left/right
+ *  *
+ *   * @param: "arg->i" stores the number of tags to shift right (positive value)
+ *    *          or left (negative value)
+ *     */
+void
+shiftview(const Arg *arg) {
+		Arg shifted;
+
+	if(arg->i > 0) // left circular shift
+		shifted.ui = (selmon->tagset[selmon->seltags] << arg->i)
+		 | (selmon->tagset[selmon->seltags] >> (LENGTH(tags) - arg->i));
+
+	else // right circular shift
+		shifted.ui = selmon->tagset[selmon->seltags] >> (- arg->i)
+		| selmon->tagset[selmon->seltags] << (LENGTH(tags) + arg->i);
+
+	view(&shifted);
+}
+
+
 /* commands */
 static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
 static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
 static const char *termcmd[]  = { "st", NULL };
+static const char *firefoxcmd[]  = { "firefox", NULL };
+static const char *emacscmd[]  = { "emacs", NULL };
+static const char *shutdowncmd[]  = { "shutdown", "now", NULL };
+static const char *rebootcmd[]  = { "reboot", NULL };
+static const char *discordcmd[]  = { "discord", NULL };
 
 static Key keys[] = {
 	/* modifier                     key        function        argument */
-	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
-	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
-	{ MODKEY,                       XK_b,      togglebar,      {0} },
-	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
-	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
-	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
-	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
-	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
-	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
-	{ MODKEY,                       XK_Return, zoom,           {0} },
-	{ MODKEY,                       XK_Tab,    view,           {0} },
-	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
-	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
-	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
-	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
-	{ MODKEY,                       XK_space,  setlayout,      {0} },
-	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
-	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
-	{ MODKEY|ShiftMask,             XK_0,      tag,            {.ui = ~0 } },
-	{ MODKEY,                       XK_comma,  focusmon,       {.i = -1 } },
-	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
-	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
-	{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
+	{ MODKEY,                       XK_p,      spawn,          { .v = dmenucmd } },
+	{ MODKEY,                       XK_Return, spawn,          { .v = termcmd } },
+	{ MODKEY,                       XK_b,      togglebar,      { 0} },
+	{ MODKEY,                       XK_j,      focusstack,     { .i = +1 } },
+	{ MODKEY,                       XK_k,      focusstack,     { .i = -1 } },
+	{ MODKEY,             		XK_m,      zoom,      	   { 0} },
+	{ MODKEY,                       XK_i,      incnmaster,     { .i = +1 } },
+	{ MODKEY,                       XK_k,      incnmaster,     { .i = -1 } },
+	{ MODKEY,                       XK_h,      setmfact,       { .f = -0.05} },
+	{ MODKEY,                       XK_l,      setmfact,       { .f = +0.05} },
+	{ MODKEY,                       XK_Tab,    view,           { 0} },
+	{ MODKEY,                       XK_c,      killclient,     { 0} },
+	{ MODKEY|ShiftMask,             XK_t,      setlayout,      { .v = &layouts[0]} },
+	{ MODKEY|ShiftMask,             XK_f,      setlayout,      { .v = &layouts[1]} },
+	{ MODKEY|ShiftMask,             XK_space,  togglefloating, { 0} },
+	{ MODKEY,                       XK_0,      view,           { .ui = ~0 } },
+	{ MODKEY|ShiftMask,             XK_0,      tag,            { .ui = ~0 } },
+	{ MODKEY,                       XK_comma,  focusmon,       { .i = +1 } },
+	{ MODKEY,                       XK_period, tagmon,         { .i = +1 } },
 	TAGKEYS(                        XK_1,                      0)
 	TAGKEYS(                        XK_2,                      1)
 	TAGKEYS(                        XK_3,                      2)
 	TAGKEYS(                        XK_4,                      3)
 	TAGKEYS(                        XK_5,                      4)
-	TAGKEYS(                        XK_6,                      5)
-	TAGKEYS(                        XK_7,                      6)
-	TAGKEYS(                        XK_8,                      7)
-	TAGKEYS(                        XK_9,                      8)
 	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
+	{ MODKEY,		        XK_x,      shiftview,      { .i = +1 } },
+	{ MODKEY,		        XK_z,      shiftview,      { .i = -1 } },
+        { MODKEY,			XK_BackSpace,spawn,        { .v = firefoxcmd } },
+        { MODKEY,			XK_v,      spawn,	   { .v = emacscmd } },
+	{ MODKEY|ShiftMask,		XK_s,	   spawn,	   { .v = shutdowncmd } },
+	{ MODKEY|ShiftMask,		XK_r,	   spawn,	   { .v = rebootcmd } },
+	{ MODKEY,			XK_d,	   spawn,	   { .v = discordcmd } },
 };
 
 /* button definitions */
